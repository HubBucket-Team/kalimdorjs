// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`docs:helper:filterByKind should filter all constructor 1`] = `
Object {
  "payload": Array [
    Object {
      "comment": Object {
        "shortText": "model training epochs",
      },
      "flags": Object {},
      "id": 724,
      "kind": 32,
      "kindString": "Constructor",
      "name": "zzzz",
      "sources": Array [
        Object {
          "character": 10,
          "fileName": "linear_model/stochastic_gradient.ts",
          "line": 126,
        },
      ],
      "type": Object {
        "name": "number",
        "type": "intrinsic",
      },
    },
  ],
  "result": true,
}
`;

exports[`docs:helper:filterByKind should filter all public Variables 1`] = `
Object {
  "payload": Array [
    Object {
      "comment": Object {
        "shortText": "Model training weights",
      },
      "flags": Object {
        "isPublic": true,
      },
      "id": 725,
      "kind": 32,
      "kindString": "Variable",
      "name": "weights",
      "sources": Array [
        Object {
          "character": 11,
          "fileName": "linear_model/stochastic_gradient.ts",
          "line": 130,
        },
      ],
      "type": Object {
        "elementType": Object {
          "name": "number",
          "type": "intrinsic",
        },
        "type": "array",
      },
    },
  ],
  "result": true,
}
`;

exports[`docs:helper:filterByTag should find a tag example 1`] = `
Object {
  "payload": Array [
    Object {
      "tag": "example",
      "text": "
import { SGDRegressor } from 'kalimdor/linear_model';
const reg = new SGDRegressor();
const X = [[0., 0.], [1., 1.]];
const y = [0, 1];
reg.fit(X, y);
reg.predict([[2., 2.]]); // result: [ 1.281828588248001 ]

",
    },
  ],
  "result": true,
}
`;
